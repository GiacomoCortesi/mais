from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.job_params_model_size import JobParamsModelSize
from openapi_server.models.job_params_subtitles_frequency import JobParamsSubtitlesFrequency
from openapi_server import util

from openapi_server.models.job_params_model_size import JobParamsModelSize  # noqa: E501
from openapi_server.models.job_params_subtitles_frequency import JobParamsSubtitlesFrequency  # noqa: E501

class JobParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_size=None, language=None, subtitles_frequency=None):  # noqa: E501
        """JobParams - a model defined in OpenAPI

        :param model_size: The model_size of this JobParams.  # noqa: E501
        :type model_size: JobParamsModelSize
        :param language: The language of this JobParams.  # noqa: E501
        :type language: JobParamsModelSize
        :param subtitles_frequency: The subtitles_frequency of this JobParams.  # noqa: E501
        :type subtitles_frequency: JobParamsSubtitlesFrequency
        """
        self.openapi_types = {
            'model_size': JobParamsModelSize,
            'language': JobParamsModelSize,
            'subtitles_frequency': JobParamsSubtitlesFrequency
        }

        self.attribute_map = {
            'model_size': 'model_size',
            'language': 'language',
            'subtitles_frequency': 'subtitles_frequency'
        }

        self._model_size = model_size
        self._language = language
        self._subtitles_frequency = subtitles_frequency

    @classmethod
    def from_dict(cls, dikt) -> 'JobParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The JobParams of this JobParams.  # noqa: E501
        :rtype: JobParams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_size(self) -> JobParamsModelSize:
        """Gets the model_size of this JobParams.


        :return: The model_size of this JobParams.
        :rtype: JobParamsModelSize
        """
        return self._model_size

    @model_size.setter
    def model_size(self, model_size: JobParamsModelSize):
        """Sets the model_size of this JobParams.


        :param model_size: The model_size of this JobParams.
        :type model_size: JobParamsModelSize
        """
        if model_size is None:
            raise ValueError("Invalid value for `model_size`, must not be `None`")  # noqa: E501

        self._model_size = model_size

    @property
    def language(self) -> JobParamsModelSize:
        """Gets the language of this JobParams.


        :return: The language of this JobParams.
        :rtype: JobParamsModelSize
        """
        return self._language

    @language.setter
    def language(self, language: JobParamsModelSize):
        """Sets the language of this JobParams.


        :param language: The language of this JobParams.
        :type language: JobParamsModelSize
        """
        if language is None:
            raise ValueError("Invalid value for `language`, must not be `None`")  # noqa: E501

        self._language = language

    @property
    def subtitles_frequency(self) -> JobParamsSubtitlesFrequency:
        """Gets the subtitles_frequency of this JobParams.


        :return: The subtitles_frequency of this JobParams.
        :rtype: JobParamsSubtitlesFrequency
        """
        return self._subtitles_frequency

    @subtitles_frequency.setter
    def subtitles_frequency(self, subtitles_frequency: JobParamsSubtitlesFrequency):
        """Sets the subtitles_frequency of this JobParams.


        :param subtitles_frequency: The subtitles_frequency of this JobParams.
        :type subtitles_frequency: JobParamsSubtitlesFrequency
        """
        if subtitles_frequency is None:
            raise ValueError("Invalid value for `subtitles_frequency`, must not be `None`")  # noqa: E501

        self._subtitles_frequency = subtitles_frequency
